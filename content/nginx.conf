user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http{

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;

    server {

    listen PORT;

    location ~ ^SecretPATH/vm* {
        set $websocket_upstream localhost:61800;

        if ($http_upgrade = websocket) {
            set $websocket_upstream $websocket_upstream;
        }

        location / {
            proxy_pass http://$websocket_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        return 401;
    }

    location ~ ^SecretPATH/wgvm* {
        set $websocket_upstream localhost:61802;

        if ($http_upgrade = websocket) {
            set $websocket_upstream $websocket_upstream;
        }

        location / {
            proxy_pass http://$websocket_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        return 401;
    }

    location ~ ^SecretPATH/tr* {
        set $http_req_upstream localhost:61801;

        if ($http_upgrade = websocket) {
            set $websocket_upstream $websocket_upstream;
        }

        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        location / {
            proxy_pass http://$http_req_upstream;
            proxy_set_header Host $host;
        }

        return 401;
    }

    location ~ ^SecretPATH/wgtr* {
        set $http_req_upstream localhost:61803;

        if ($http_upgrade = websocket) {
            set $websocket_upstream $websocket_upstream;
        }

        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        location / {
            proxy_pass http://$http_req_upstream;
            proxy_set_header Host $host;
        }

        return 401;
    }

    location ~ ^SecretPATH/api* {
        if ($scheme = http) {
            return 301 https://$host$request_uri;
        }

        rewrite ^SecretPATH/api(.*) /$1 break;
        proxy_pass http://localhost:61804;
    }
    
    }
}
server {

listen PORT;

root /var/www/html; 

location / {
    try_files $uri $uri/ =404; 
}

location ~ ^SecretPATH/vm* {
    set $websocket_upstream localhost:61800;

    if ($http_upgrade != "websocket") { 
        return 401;
    }

    proxy_pass http://$websocket_upstream;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
}

location ~ ^SecretPATH/wgvm* {
    set $websocket_upstream localhost:61802;

    if ($http_upgrade != "websocket") { 
        return 401;
    }

    proxy_pass http://$websocket_upstream;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
}

location ~ ^SecretPATH/tr* {
    set $http_req_upstream localhost:61801;

    if ($http_upgrade != "websocket") { 
        return 401;
    }

    if ($scheme = http) {
        return 301 https://$host$request_uri;
    }
    proxy_pass http://$http_req_upstream;
    proxy_set_header Host $host;
}

location ~ ^SecretPATH/wgtr* {
    set $http_req_upstream localhost:61803;

    if ($http_upgrade != "websocket") { 
        return 401;
    }

    if ($scheme = http) {
        return 301 https://$host$request_uri;
    }

    proxy_pass http://$http_req_upstream;
    proxy_set_header Host $host;
}

location ~ ^SecretPATH/api* {
    if ($scheme = http) {
        return 301 https://$host$request_uri;
    }

    rewrite ^SecretPATH/api(.*) /$1 break;
    proxy_pass http://localhost:61804;
}
}